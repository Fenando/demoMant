/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.components;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author ignacio
 */
public class JPanelAnimated extends javax.swing.JPanel {

	private boolean animando = false;
	private javax.swing.JPanel actual;
	private javax.swing.JPanel nuevo;
	private Cuadro cuadroNuevo;
	private Cuadro cuadroActual;
	private int tiempo;
	private int fracciones;
	private int aMover;

	/**
	 * Creates new form AnimatedPanelV
	 */
	public JPanelAnimated() {
		this.tiempo = 250;
		initComponents();
	}

	public void cambiarPanel(javax.swing.JPanel panel) {
		if (actual == null) {
			actual = panel;
			actual.setSize(this.getSize());
			actual.setPreferredSize(this.getSize());
			add(actual);
			revalidate();
			return;
		}
		if (!animando) {
			nuevo = panel;
			animar();
		}
	}

	public int getTiempo() {
		return tiempo;
	}

	public void setTiempo(int tiempo) {
		this.tiempo = tiempo;
	}

	private void animar() {
		if (animando == false && nuevo != null) {
			//Obtiene la imagen del antiguo
			BufferedImage bo = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_4BYTE_ABGR);
			actual.printComponents(bo.createGraphics());
			cuadroActual = new Cuadro(bo, 0, 0);
			//Obtiene la imagen del nuevo
			nuevo.setSize(this.getSize());
			nuevo.setPreferredSize(this.getSize());
			nuevo.setLocation(getWidth(), getHeight());
			add(nuevo);
			revalidate();
			repaint();
			SwingUtilities.invokeLater(() -> {
				actual.setLocation(-getWidth(), -getHeight());
				animando = true;
				try {
					Thread.sleep(50);
				} catch (InterruptedException ex) {
					terminarAnimacion();
				}
				BufferedImage bi = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_4BYTE_ABGR);
				nuevo.printComponents(bi.createGraphics());
				//Calcula el tiempo para la animacion
				int cantidadPasos = (int) (tiempo / 16);
				fracciones = (int) tiempo / cantidadPasos;
				aMover = nuevo.getWidth() / cantidadPasos;
				cuadroNuevo = new Cuadro(bi, getWidth(), 0);
				//Obtiene el dibujo del nuevo componente
				SwingUtilities.invokeLater(() -> {
					try {
						for (int i = 0; i < cantidadPasos; i++) {
							Thread.sleep(fracciones);
							cuadroNuevo.desplazarX(-aMover);
							cuadroActual.desplazarX(-aMover);
							paint(this.getGraphics());
						}
					} catch (InterruptedException ex) {
					} finally {
						terminarAnimacion();
					}
				});
			});
		}
	}

	private void terminarAnimacion() {
		animando = false;
		remove(actual);
		nuevo.setVisible(true);
		nuevo.setLocation(0, 0);
		actual = nuevo;
		nuevo = null;
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
		//g.drawLine(0, 0, 200, 200);
	}

	@Override
	public void paint(Graphics g) {
		if (animando) {
			g.setColor(UIManager.getColor("Panel.background"));
			g.fillRect(0, 0, getWidth(), getHeight());
			g.drawImage(cuadroNuevo.buffer, cuadroNuevo.x, cuadroNuevo.y, null);
			g.drawImage(cuadroActual.buffer, cuadroActual.x, cuadroActual.y, null);
		} else {
			super.paint(g); //To change body of generated methods, choose Tools | Templates.
		}
	}

	class Cuadro {

		BufferedImage buffer;
		int x, y;

		public Cuadro(BufferedImage buffer, int x, int y) {
			this.buffer = buffer;
			this.x = x;
			this.y = y;
		}

		public int getX() {
			return x;
		}

		public void setX(int x) {
			this.x = x;
		}

		public int getY() {
			return y;
		}

		public void setY(int y) {
			this.y = y;
		}

		public void desplazarX(int x) {
			this.x += x;
		}

		@Override
		public String toString() {
			return "Cuadro{x=" + x + ", y=" + y + '}';
		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
